<Activity mc:Ignorable="sap sap2010" x:Class="CheckDate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dayfrom" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="dayto" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="monthfrom" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="monthto" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="yearfrom" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="yearto" Type="InArgument(ui:GenericValue)" />
    <x:Property Name="dateIsValid" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>546,1655</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CheckDate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CheckDate" sap:VirtualizedContainerService.HintSize="526,1595" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(ui:GenericValue, ui:GenericValue)" Name="dateD">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(ui:GenericValue, ui:GenericValue)" ExpressionText="New Dictionary(Of GenericValue, GenericValue) From {{&quot;January&quot;,&quot;01&quot;},{&quot;February&quot;,&quot;02&quot;},{&quot;March&quot;,&quot;03&quot;},{&quot;April&quot;,&quot;04&quot;},{&quot;May&quot;,&quot;05&quot;},{&quot;June&quot;,&quot;06&quot;},{&quot;July&quot;,&quot;07&quot;},{&quot;August&quot;,&quot;08&quot;},{&quot;September&quot;,&quot;09&quot;},{&quot;October&quot;,&quot;10&quot;},{&quot;November&quot;,&quot;11&quot;},{&quot;December&quot;,&quot;12&quot;}}">
            <mva:VisualBasicValue.Result>
              <OutArgument x:TypeArguments="scg:Dictionary(ui:GenericValue, ui:GenericValue)" />
            </mva:VisualBasicValue.Result>
          </mva:VisualBasicValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="date1" />
      <Variable x:TypeArguments="x:String" Name="date2" />
      <Variable x:TypeArguments="s:DateTime" Name="dateFrom" />
      <Variable x:TypeArguments="s:DateTime" Name="dateTo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[dateIsValid]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="484,755" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" ReadOnly="True" Visible="False" WorkbookPath="Data\TravelRequestTemplate.xlsm">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,646" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadCell Cell="B19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[dayfrom]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="C19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[monthfrom]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="D19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[yearfrom]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="E19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[dayto]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="F19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[monthto]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="G19" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="Request">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[yearto]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[date1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dayfrom.ToString + "/" + dateD(monthfrom).ToString + "/" + yearfrom.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[date2]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dayto.ToString + "/" + dateD(monthto).ToString + "/" + yearto.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[dateFrom]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[Convert.toDatetime(Datetime.parseexact(date1,"dd/MM/yyyy",System.Globalization.DateTimeFormatInfo.InvariantInfo))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[dateTo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[Convert.toDatetime(Datetime.parseexact(date2,"dd/MM/yyyy",System.Globalization.DateTimeFormatInfo.InvariantInfo))]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[(DateTime.Compare(dateFrom, DateTime.Now) &lt; 0) Or (DateTime.Compare(dateTo, DateTime.Now) &lt; 0) Or (DateTime.Compare(dateFrom, dateTo) &gt; 0)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[dateIsValid]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
  </Sequence>
</Activity>